#!/usr/bin/env ruby

require 'bundler/setup'

require 'configru'
require 'cinch'
require 'cinch/plugins/basic_ctcp'
require 'cinch/plugins/identify'

$LOAD_PATH << File.expand_path(File.join(File.dirname(__FILE__), '..', 'lib'))
require 'eleventhbot/plugin'

Configru.load('eleventhbot.yml') do
  option_group :irc do
    option_required :server, String
    option :port, Fixnum, 6667
    option_bool :ssl, false

    option :nick, String, 'bot11'
    option :prefix, String, '!'

    option_array :channels, String

    option :nickserv, String

    option_group :sasl do
      option :username, String
      option :password, String
    end
  end

  option_array :plugins, String

  EleventhBot::Plugin.list.each do |plugin|
    next unless plugin.configru_block
    option_group plugin.plugin_name do
      instance_eval &plugin.configru_block
    end
  end
end

Configru.plugins.map {|r| require("eleventhbot/plugin/#{r}") }
Configru.reload

bot = Cinch::Bot.new do
  configure do |c|
    c.nick = Configru.irc.nick
    c.server = Configru.irc.server
    c.port = Configru.irc.port
    c.ssl.use = Configru.irc.ssl
    c.channels = Configru.irc.channels
    c.plugins.prefix = /^(?:#{Regexp.escape(Configru.irc.prefix)}|#{Regexp.escape(c.nick)}_*[:,]\s+)/
    c.plugins.suffix = /\s*$/ # Allow trailing whitespace

    c.plugins.plugins = [Cinch::Plugins::BasicCTCP, Cinch::Plugins::Identify]

    c.plugins.options[Cinch::Plugins::BasicCTCP][:commands] = [:version, :time, :ping]

    if Configru.irc.nickserv
      c.plugins.options[Cinch::Plugins::Identify] = {
        :type => :nickserv,
        :username => Configru.irc.nick,
        :password => Configru.irc.nickserv
      }
    end

    if Configru.irc.sasl.username
      c.sasl.username = Configru.irc.sasl.username
      c.sasl.password = Configru.irc.sasl.password
    end

    EleventhBot::Plugin.list.each do |plugin|
      c.plugins.plugins << plugin
      c.plugins.options[plugin] = Configru[plugin.plugin_name]
    end
  end

  on :message, '`meep' do |m|
    m.reply('meep')
  end
end

bot.start
